{"version":3,"file":"static/js/5603.5e0da233.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/dist/errors-e1a2656b.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js","../node_modules/@babel/runtime/helpers/esm/toArray.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\nimport { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"chains\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"ready\", void 0);\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(message);\n    _defineProperty(this, \"cause\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, Connector as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ChainNotConfiguredError as a, ConnectorNotFoundError as b };\n","import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-9d546189.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-eea39a9a.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { C as Connector, U as UserRejectedRequestError, S as SwitchChainError } from '../../../../dist/errors-e1a2656b.browser.esm.js';\nimport '../../../../dist/checkPrivateRedeclaration-3aaaa21d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nconst NAMESPACE = \"eip155\";\nconst REQUESTED_CHAINS_KEY = \"wagmi.requestedChains\";\nconst ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nconst LAST_USED_CHAIN_ID = \"last-used-chain-id\";\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _initProviderPromise = /*#__PURE__*/new WeakMap();\nvar _storage = /*#__PURE__*/new WeakMap();\nvar _createProvider = /*#__PURE__*/new WeakSet();\nvar _initProvider = /*#__PURE__*/new WeakSet();\nvar _isChainsStale = /*#__PURE__*/new WeakSet();\nvar _removeListeners = /*#__PURE__*/new WeakSet();\nvar _setRequestedChainsIds = /*#__PURE__*/new WeakSet();\nvar _getRequestedChainsIds = /*#__PURE__*/new WeakSet();\nvar _getNamespaceChainsIds = /*#__PURE__*/new WeakSet();\nvar _getNamespaceMethods = /*#__PURE__*/new WeakSet();\nclass WalletConnectConnector extends Connector {\n  constructor(config) {\n    super({\n      ...config,\n      options: {\n        isNewChainsStale: true,\n        ...config.options\n      }\n    });\n    _classPrivateMethodInitSpec(this, _getNamespaceMethods);\n    _classPrivateMethodInitSpec(this, _getNamespaceChainsIds);\n    _classPrivateMethodInitSpec(this, _getRequestedChainsIds);\n    _classPrivateMethodInitSpec(this, _setRequestedChainsIds);\n    _classPrivateMethodInitSpec(this, _removeListeners);\n    /**\n     * Checks if the target chains match the chains that were\n     * initially requested by the connector for the WalletConnect session.\n     * If there is a mismatch, this means that the chains on the connector\n     * are considered stale, and need to be revalidated at a later point (via\n     * connection).\n     *\n     * There may be a scenario where a dapp adds a chain to the\n     * connector later on, however, this chain will not have been approved or rejected\n     * by the wallet. In this case, the chain is considered stale.\n     *\n     * There are exceptions however:\n     * -  If the wallet supports dynamic chain addition via `eth_addEthereumChain`,\n     *    then the chain is not considered stale.\n     * -  If the `isNewChainsStale` flag is falsy on the connector, then the chain is\n     *    not considered stale.\n     *\n     * For the above cases, chain validation occurs dynamically when the user\n     * attempts to switch chain.\n     *\n     * Also check that dapp supports at least 1 chain from previously approved session.\n     */\n    _classPrivateMethodInitSpec(this, _isChainsStale);\n    _classPrivateMethodInitSpec(this, _initProvider);\n    _classPrivateMethodInitSpec(this, _createProvider);\n    _defineProperty(this, \"id\", \"walletConnect\");\n    _defineProperty(this, \"name\", \"WalletConnect\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _initProviderPromise, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _storage, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      _classPrivateFieldGet(this, _storage).setItem(LAST_USED_CHAIN_ID, String(chainId));\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      _classPrivateMethodGet(this, _setRequestedChainsIds, _setRequestedChainsIds2).call(this, []);\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_USED_CHAIN_ID);\n      this.emit(\"disconnect\");\n    });\n    _defineProperty(this, \"onDisplayUri\", uri => {\n      this.emit(\"message\", {\n        type: \"display_uri\",\n        data: uri\n      });\n    });\n    _defineProperty(this, \"onConnect\", () => {\n      this.emit(\"connect\", {\n        provider: _classPrivateFieldGet(this, _provider)\n      });\n    });\n    _classPrivateFieldSet(this, _storage, config.options.storage);\n    _classPrivateMethodGet(this, _createProvider, _createProvider2).call(this);\n  }\n  async connect() {\n    let {\n      chainId: chainIdP,\n      pairingTopic\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      let targetChainId = chainIdP;\n      if (!targetChainId) {\n        const lastUsedChainIdStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_USED_CHAIN_ID);\n        const lastUsedChainId = lastUsedChainIdStr ? parseInt(lastUsedChainIdStr) : undefined;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) {\n          targetChainId = lastUsedChainId;\n        } else {\n          targetChainId = this.chains[0]?.chainId;\n        }\n      }\n      if (!targetChainId) {\n        throw new Error(\"No chains found on connector.\");\n      }\n      const provider = await this.getProvider();\n      this.setupListeners();\n      const isChainsStale = await _classPrivateMethodGet(this, _isChainsStale, _isChainsStale2).call(this);\n\n      // If there is an active session with stale chains, disconnect the current session.\n      if (provider.session && isChainsStale) {\n        await provider.disconnect();\n      }\n\n      // If there no active session, or the chains are stale, connect.\n      if (!provider.session || isChainsStale) {\n        const optionalChains = this.chains.filter(chain => chain.chainId !== targetChainId).map(optionalChain => optionalChain.chainId);\n        this.emit(\"message\", {\n          type: \"connecting\"\n        });\n        await provider.connect({\n          pairingTopic,\n          chains: [targetChainId],\n          optionalChains: optionalChains.length > 0 ? optionalChains : [targetChainId]\n        });\n        _classPrivateMethodGet(this, _setRequestedChainsIds, _setRequestedChainsIds2).call(this, this.chains.map(_ref => {\n          let {\n            chainId\n          } = _ref;\n          return chainId;\n        }));\n      }\n\n      // If session exists and chains are authorized, enable provider for required chain\n      const accounts = await provider.enable();\n      if (accounts.length === 0) {\n        throw new Error(\"No accounts found on provider.\");\n      }\n      const account = utils.getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message)) {\n        throw error;\n      }\n    } finally {\n      _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n      _classPrivateMethodGet(this, _setRequestedChainsIds, _setRequestedChainsIds2).call(this, []);\n    }\n  }\n  async getAccount() {\n    const {\n      accounts\n    } = await this.getProvider();\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found on provider.\");\n    }\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const {\n      chainId\n    } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!_classPrivateFieldGet(this, _provider)) {\n      await _classPrivateMethodGet(this, _createProvider, _createProvider2).call(this);\n    }\n    if (chainId) {\n      await this.switchChain(chainId);\n    }\n    if (!_classPrivateFieldGet(this, _provider)) {\n      throw new Error(\"No provider found.\");\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([this.getAccount(), this.getProvider()]);\n      const isChainsStale = await _classPrivateMethodGet(this, _isChainsStale, _isChainsStale2).call(this);\n\n      // If an account does not exist on the session, then the connector is unauthorized.\n      if (!account) {\n        return false;\n      }\n\n      // If the chains are stale on the session, then the connector is unauthorized.\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {} // eslint-disable-line no-empty\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find(chain_ => chain_.chainId === chainId);\n    if (!chain) {\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    }\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = _classPrivateMethodGet(this, _getNamespaceChainsIds, _getNamespaceChainsIds2).call(this);\n      const namespaceMethods = _classPrivateMethodGet(this, _getNamespaceMethods, _getNamespaceMethods2).call(this);\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [{\n            chainId: utils.hexValue(chain.chainId),\n            blockExplorerUrls: [chain.explorers?.length ? chain.explorers[0] : undefined],\n            chainName: chain.name,\n            nativeCurrency: chain.nativeCurrency,\n            rpcUrls: [...chain.rpc]\n          }]\n        });\n        const requestedChains = await _classPrivateMethodGet(this, _getRequestedChainsIds, _getRequestedChainsIds2).call(this);\n        requestedChains.push(chainId);\n        _classPrivateMethodGet(this, _setRequestedChainsIds, _setRequestedChainsIds2).call(this, requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: utils.hexValue(chainId)\n        }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n    _classPrivateFieldGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n    _classPrivateFieldGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n    _classPrivateFieldGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n    _classPrivateFieldGet(this, _provider).on(\"session_delete\", this.onDisconnect);\n    _classPrivateFieldGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n    _classPrivateFieldGet(this, _provider).on(\"connect\", this.onConnect);\n  }\n}\nasync function _createProvider2() {\n  if (!_classPrivateFieldGet(this, _initProviderPromise) && \"object\" !== \"undefined\") {\n    _classPrivateFieldSet(this, _initProviderPromise, _classPrivateMethodGet(this, _initProvider, _initProvider2).call(this));\n  }\n  return _classPrivateFieldGet(this, _initProviderPromise);\n}\nasync function _initProvider2() {\n  const {\n    default: EthereumProvider,\n    OPTIONAL_EVENTS,\n    OPTIONAL_METHODS\n  } = await import('@walletconnect/ethereum-provider');\n  const [defaultChain, ...optionalChains] = this.chains.map(_ref2 => {\n    let {\n      chainId\n    } = _ref2;\n    return chainId;\n  });\n  if (defaultChain) {\n    // EthereumProvider populates & deduplicates required methods and events internally\n    _classPrivateFieldSet(this, _provider, await EthereumProvider.init({\n      showQrModal: this.options.qrcode !== false,\n      projectId: this.options.projectId,\n      optionalMethods: OPTIONAL_METHODS,\n      optionalEvents: OPTIONAL_EVENTS,\n      chains: [defaultChain],\n      optionalChains: optionalChains,\n      metadata: {\n        name: this.options.dappMetadata.name,\n        description: this.options.dappMetadata.description || \"\",\n        url: this.options.dappMetadata.url,\n        icons: [this.options.dappMetadata.logoUrl || \"\"]\n      },\n      rpcMap: Object.fromEntries(this.chains.map(chain => [chain.chainId, chain.rpc[0]]))\n    }));\n  }\n}\nasync function _isChainsStale2() {\n  const namespaceMethods = _classPrivateMethodGet(this, _getNamespaceMethods, _getNamespaceMethods2).call(this);\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n    return false;\n  }\n  if (!this.options.isNewChainsStale) {\n    return false;\n  }\n  const requestedChains = await _classPrivateMethodGet(this, _getRequestedChainsIds, _getRequestedChainsIds2).call(this);\n  const connectorChains = this.chains.map(_ref3 => {\n    let {\n      chainId\n    } = _ref3;\n    return chainId;\n  });\n  const namespaceChains = _classPrivateMethodGet(this, _getNamespaceChainsIds, _getNamespaceChainsIds2).call(this);\n  if (namespaceChains.length && !namespaceChains.some(id => connectorChains.includes(id))) {\n    return false;\n  }\n  return !connectorChains.every(id => requestedChains.includes(id));\n}\nfunction _removeListeners2() {\n  if (!_classPrivateFieldGet(this, _provider)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  _classPrivateFieldGet(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\n  _classPrivateFieldGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  _classPrivateFieldGet(this, _provider).removeListener(\"connect\", this.onConnect);\n}\nfunction _setRequestedChainsIds2(chains) {\n  _classPrivateFieldGet(this, _storage).setItem(REQUESTED_CHAINS_KEY, JSON.stringify(chains));\n}\nasync function _getRequestedChainsIds2() {\n  const data = await _classPrivateFieldGet(this, _storage).getItem(REQUESTED_CHAINS_KEY);\n  return data ? JSON.parse(data) : [];\n}\nfunction _getNamespaceChainsIds2() {\n  if (!_classPrivateFieldGet(this, _provider)) {\n    return [];\n  }\n  const chainIds = _classPrivateFieldGet(this, _provider).session?.namespaces[NAMESPACE]?.chains?.map(chain => parseInt(chain.split(\":\")[1] || \"\"));\n  return chainIds ?? [];\n}\nfunction _getNamespaceMethods2() {\n  if (!_classPrivateFieldGet(this, _provider)) {\n    return [];\n  }\n  const methods = _classPrivateFieldGet(this, _provider).session?.namespaces[NAMESPACE]?.methods;\n  return methods ?? [];\n}\n\nexport { WalletConnectConnector };\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"names":["Connector","_EventEmitter","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","_ref$chains","chains","defaultChains","options","call","_defineProperty","_assertThisInitialized","_createClass","key","value","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","chainId","this","some","EventEmitter","RpcError","_Error","_super2","message","_this2","cause","code","data","Number","isInteger","Error","_wrapNativeSuper","ProviderRpcError","_RpcError","_super3","AddChainError","_Error2","_super4","_this3","apply","arguments","ChainNotConfiguredError","_Error3","_super5","_this4","connectorId","concat","ConnectorNotFoundError","_Error4","_super6","_this5","ResourceUnavailableError","_RpcError2","_super7","_this6","SwitchChainError","_ProviderRpcError","_super8","_this7","UserRejectedRequestError","_ProviderRpcError2","_super9","_this8","NAMESPACE","REQUESTED_CHAINS_KEY","ADD_ETH_CHAIN_METHOD","LAST_USED_CHAIN_ID","_provider","WeakMap","_initProviderPromise","_storage","_createProvider","WeakSet","_initProvider","_isChainsStale","_removeListeners","_setRequestedChainsIds","_getRequestedChainsIds","_getNamespaceChainsIds","_getNamespaceMethods","WalletConnectConnector","_Connector","config","_objectSpread","isNewChainsStale","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","accounts","emit","account","utils","id","unsupported","isChainUnsupported","_classPrivateFieldGet","setItem","String","_classPrivateMethodGet","_setRequestedChainsIds2","removeItem","uri","type","provider","_classPrivateFieldSet","storage","_createProvider2","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref4","chainIdP","pairingTopic","targetChainId","lastUsedChainIdStr","lastUsedChainId","_this$chains$","isChainsStale","optionalChains","_args","wrap","_context","prev","next","getItem","sent","parseInt","getProvider","setupListeners","_isChainsStale2","session","disconnect","filter","optionalChain","connect","enable","getChainId","abrupt","providers","t0","test","stop","_disconnect","_callee2","_context2","_removeListeners2","finish","_getAccount","_callee3","_yield$this$getProvid","_context3","_getChainId","_callee4","_yield$this$getProvid2","_context4","_getProvider","_callee5","_args5","_context5","switchChain","_getSigner","_callee6","_yield$Promise$all","_yield$Promise$all2","_args6","_context6","Promise","all","getAccount","_slicedToArray","getSigner","_isAuthorized","_callee7","_yield$Promise$all3","_yield$Promise$all4","_context7","t1","_switchChain","_callee8","namespaceChains","namespaceMethods","requestedChains","_context8","find","chain_","_getNamespaceChainsIds2","_getNamespaceMethods2","includes","request","method","params","blockExplorerUrls","chainName","name","nativeCurrency","rpcUrls","_toConsumableArray","rpc","_getRequestedChainsIds2","push","_x","_setupListeners","_callee9","_context9","on","onAccountsChanged","onChainChanged","onDisconnect","onDisplayUri","onConnect","_createProvider3","_callee10","_context10","_initProvider2","_initProvider3","_callee11","_yield$import","EthereumProvider","OPTIONAL_EVENTS","OPTIONAL_METHODS","_this$chains$map","_this$chains$map2","defaultChain","_context11","default","_ref2","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","slice","t2","init","showQrModal","qrcode","projectId","optionalMethods","optionalEvents","metadata","dappMetadata","description","icons","logoUrl","rpcMap","Object","fromEntries","t3","_isChainsStale3","_callee12","connectorChains","_context12","_ref3","every","removeListener","JSON","stringify","_getRequestedChainsIds3","_callee13","_context13","parse","_classPrivateFieldGet2","_classPrivateFieldGet3","_classPrivateFieldGet4","chainIds","namespaces","split","_classPrivateFieldGet5","_classPrivateFieldGet6","methods"],"sourceRoot":""}