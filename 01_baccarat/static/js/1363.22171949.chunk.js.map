{"version":3,"file":"static/js/1363.22171949.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/dist/errors-e1a2656b.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\nimport { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"chains\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"ready\", void 0);\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(message);\n    _defineProperty(this, \"cause\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, Connector as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ChainNotConfiguredError as a, ConnectorNotFoundError as b };\n","function normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-9d546189.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-eea39a9a.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { C as Connector, U as UserRejectedRequestError, S as SwitchChainError } from '../../../../dist/errors-e1a2656b.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport '../../../../dist/checkPrivateRedeclaration-3aaaa21d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n * - Trust Wallet (trustwallet.com)\n */\n// const switchChainAllowedRegex = /(imtoken|metamask|rainbow|trust wallet)/i;\n\nconst LAST_USED_CHAIN_ID = \"last-used-chain-id\";\nconst LAST_SESSION = \"last-session\";\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _storage = /*#__PURE__*/new WeakMap();\nvar _handleConnected = /*#__PURE__*/new WeakSet();\nvar _removeListeners = /*#__PURE__*/new WeakSet();\nclass WalletConnectV1Connector extends Connector {\n  constructor(config) {\n    super(config);\n    _classPrivateMethodInitSpec(this, _removeListeners);\n    _classPrivateMethodInitSpec(this, _handleConnected);\n    _defineProperty(this, \"id\", \"walletConnectV1\");\n    _defineProperty(this, \"name\", \"WalletConnectV1\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _storage, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"walletName\", void 0);\n    _defineProperty(this, \"onSwitchChain\", () => {\n      this.emit(\"message\", {\n        type: \"switch_chain\"\n      });\n    });\n    _defineProperty(this, \"onDisplayUri\", async (error, payload) => {\n      if (error) {\n        this.emit(\"message\", {\n          data: error,\n          type: \"display_uri_error\"\n        });\n      }\n      this.emit(\"message\", {\n        data: payload.params[0],\n        type: \"display_uri\"\n      });\n    });\n    _defineProperty(this, \"onRequestSent\", (error, payload) => {\n      if (error) {\n        this.emit(\"message\", {\n          data: error,\n          type: \"request\"\n        });\n      }\n      this.emit(\"message\", {\n        data: payload.params[0],\n        type: \"request\"\n      });\n    });\n    _defineProperty(this, \"onMessage\", message => {\n      this.emit(\"message\", message);\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      _classPrivateFieldGet(this, _storage).setItem(LAST_USED_CHAIN_ID, String(chainId));\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.walletName = undefined;\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_USED_CHAIN_ID);\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_SESSION);\n      _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n      this.emit(\"disconnect\");\n    });\n    _classPrivateFieldSet(this, _storage, config.storage);\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const lastUsedChainIdStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_USED_CHAIN_ID);\n        const lastUsedChainId = lastUsedChainIdStr ? parseInt(lastUsedChainIdStr) : undefined;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) {\n          targetChainId = lastUsedChainId;\n        }\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      this.setupListeners();\n\n      // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n      setTimeout(() => this.emit(\"message\", {\n        type: \"connecting\"\n      }), 0);\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n      this.walletName = provider.connector?.peerMeta?.name ?? \"\";\n\n      // switch to target chainId\n      if (chainId) {\n        try {\n          await this.switchChain(chainId);\n          id = chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`could not switch to desired chain id: ${chainId} `, e);\n        }\n      }\n      _classPrivateMethodGet(this, _handleConnected, _handleConnected2).call(this);\n      this.emit(\"connect\", {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      });\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts;\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Force create new provider\n    if (!_classPrivateFieldGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce((rpc_, chain) => ({\n        ...rpc_,\n        [chain.chainId]: chain.rpc[0]\n      }), {}) : {};\n      const WalletConnectProvider = (await import('../../../../dist/index-42b0f5f5.browser.esm.js')).default;\n      const sessionStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_SESSION);\n      const session = sessionStr ? JSON.parse(sessionStr) : undefined;\n      this.walletName = session?.peerMeta?.name || undefined;\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: {\n          ...rpc,\n          ...this.options?.rpc\n        },\n        session: session ? session : undefined\n      }));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      // Set up a race between `wallet_switchEthereumChain` & the `chainChanged` event\n      // to ensure the chain has been switched. This is because there could be a case\n      // where a wallet may not resolve the `wallet_switchEthereumChain` method, or\n      // resolves slower than `chainChanged`.\n      await Promise.race([provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      }), new Promise(res => this.on(\"change\", _ref => {\n        let {\n          chain\n        } = _ref;\n        if (chain?.id === chainId) {\n          res(chainId);\n        }\n      }))]);\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        network: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        shortName: \"eth\",\n        chain: \"ETH\",\n        slug: \"ethereum\",\n        testnet: false\n      };\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      const chain = this.chains.find(x => x.chainId === chainId);\n\n      // if chain is not supported\n      if (!chain) {\n        throw new SwitchChainError(`Chain ${chainId} is not added in the list of supported chains`);\n      }\n      console.log({\n        chain\n      });\n\n      // if chain is not configured in the wallet\n      if (/Unrecognized chain ID/i.test(message)) {\n        // configure it\n        this.emit(\"message\", {\n          type: \"add_chain\"\n        });\n        const blockExplorerUrls = this.getBlockExplorerUrls(chain);\n        await provider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            chainId: chainIdHex,\n            chainName: chain.name,\n            nativeCurrency: chain.nativeCurrency,\n            rpcUrls: chain.rpc,\n            blockExplorerUrls\n          }]\n        });\n        return chain;\n      } else {\n        throw new SwitchChainError(error);\n      }\n    }\n  }\n  async setupListeners() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    _classPrivateFieldGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n    _classPrivateFieldGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n    _classPrivateFieldGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n    _classPrivateFieldGet(this, _provider).on(\"message\", this.onMessage);\n    _classPrivateFieldGet(this, _provider).on(\"switchChain\", this.onSwitchChain);\n    _classPrivateFieldGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n    _classPrivateFieldGet(this, _provider).on(\"call_request_sent\", this.onRequestSent);\n  }\n}\nasync function _handleConnected2() {\n  const session = _classPrivateFieldGet(this, _provider)?.connector.session;\n  this.walletName = session?.peerMeta?.name || \"\";\n  const sessionStr = JSON.stringify(session);\n  _classPrivateFieldGet(this, _storage).setItem(LAST_SESSION, sessionStr);\n}\nfunction _removeListeners2() {\n  if (!_classPrivateFieldGet(this, _provider)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  _classPrivateFieldGet(this, _provider).removeListener(\"message\", this.onMessage);\n  _classPrivateFieldGet(this, _provider).removeListener(\"switchChain\", this.onSwitchChain);\n  _classPrivateFieldGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  _classPrivateFieldGet(this, _provider).removeListener(\"call_request_sent\", this.onRequestSent);\n}\n\nexport { WalletConnectV1Connector };\n"],"names":["Connector","_EventEmitter","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","_ref$chains","chains","defaultChains","options","call","_defineProperty","_assertThisInitialized","_createClass","key","value","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","chainId","this","some","EventEmitter","RpcError","_Error","_super2","message","_this2","cause","code","data","Number","isInteger","Error","_wrapNativeSuper","ProviderRpcError","_RpcError","_super3","AddChainError","_Error2","_super4","_this3","apply","arguments","ChainNotConfiguredError","_Error3","_super5","_this4","connectorId","concat","ConnectorNotFoundError","_Error4","_super6","_this5","ResourceUnavailableError","_RpcError2","_super7","_this6","SwitchChainError","_ProviderRpcError","_super8","_this7","UserRejectedRequestError","_ProviderRpcError2","_super9","_this8","normalizeChainId","parseInt","trim","substring","LAST_USED_CHAIN_ID","LAST_SESSION","_provider","WeakMap","_storage","_handleConnected","WeakSet","_removeListeners","WalletConnectV1Connector","_Connector","config","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","emit","type","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","error","payload","wrap","_context","prev","next","params","stop","_x","_x2","accounts","account","utils","id","unsupported","isChainUnsupported","_classPrivateFieldGet","setItem","String","_callee2","_context2","walletName","removeItem","_classPrivateMethodGet","_removeListeners2","_classPrivateFieldSet","storage","_connect","_callee3","_provider$connector$p","_provider$connector","_provider$connector$p2","targetChainId","lastUsedChainIdStr","lastUsedChainId","provider","_args3","_context3","getItem","sent","getProvider","create","setupListeners","setTimeout","enable","getChainId","connector","peerMeta","name","switchChain","t0","console","_handleConnected2","abrupt","providers","t1","test","_disconnect","_callee4","_context4","disconnect","_getAccount","_callee5","_context5","_getChainId","_callee6","_context6","_getProvider","_callee7","_ref5","_this$options","_session$peerMeta","_this$options2","rpc","WalletConnectProvider","sessionStr","session","_args7","_context7","infuraId","reduce","rpc_","_objectSpread","_defineProperty2","default","JSON","parse","_getSigner","_callee8","_yield$Promise$all","_yield$Promise$all2","_args8","_context8","Promise","all","getAccount","_slicedToArray","getSigner","_isAuthorized","_callee9","_context9","_switchChain","_callee10","chainIdHex","_this$chains$find","blockExplorerUrls","_context10","race","request","method","res","on","find","network","nativeCurrency","decimals","symbol","shortName","slug","testnet","log","getBlockExplorerUrls","chainName","rpcUrls","_x3","_setupListeners","_callee11","_context11","onAccountsChanged","onChainChanged","onDisconnect","onMessage","onSwitchChain","onDisplayUri","onRequestSent","_handleConnected3","_callee12","_classPrivateFieldGet2","_session$peerMeta2","_context12","stringify","removeListener"],"sourceRoot":""}